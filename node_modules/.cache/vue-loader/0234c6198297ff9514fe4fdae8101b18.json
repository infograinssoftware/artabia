{"remainingRequest":"/home/and-01/Desktop/Artabiaf/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/and-01/Desktop/Artabiaf/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/and-01/Desktop/Artabiaf/src/views/Profile.vue","mtime":1640244592688},{"path":"/home/and-01/Desktop/Artabiaf/node_modules/cache-loader/dist/cjs.js","mtime":1639812331769},{"path":"/home/and-01/Desktop/Artabiaf/node_modules/babel-loader/lib/index.js","mtime":1639812331565},{"path":"/home/and-01/Desktop/Artabiaf/node_modules/cache-loader/dist/cjs.js","mtime":1639812331769},{"path":"/home/and-01/Desktop/Artabiaf/node_modules/vue-loader/lib/index.js","mtime":1639812332765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQcm9maWxlU2lkZWJhciBmcm9tICJAL2NvbXBvbmVudHMvUHJvZmlsZVNpZGViYXIiOwppbXBvcnQgSXRlbUNhcmQgZnJvbSAiQC9jb21wb25lbnRzL0l0ZW1DYXJkIjsKLy8gaW1wb3J0IGNhcmRzIGZyb20gJ0AvY2FyZHMuanNvbicKaW1wb3J0IFN3YWwgZnJvbSAic3dlZXRhbGVydDIiOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgUHJvZmlsZVNpZGViYXIsIEl0ZW1DYXJkLCBTd2FsIH0sCiAgcHJvcHM6IFsiY2FyZHMiXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2FyZHM6IG51bGwsCiAgICAgIHVzZXJDb3ZlckltZzogbnVsbCwKICAgICAgdXNlcjogbnVsbCwKICAgICAgLy8gZ2V0RnJlZVZpZGVvIDogZ2V0RnJlZVZpZGVvKCkKICAgIH07CiAgfSwKICBhc3luYyBjcmVhdGVkKCl7CiAgICBNb3JhbGlzLmluaXRpYWxpemUoImNVY0lSZWxoVHBjTTV0dllBSGlEdUNFdU5JcFhlUkdBNTZKNE9mTk0iKTsKCiAgICBNb3JhbGlzLnNlcnZlclVSTCA9ICJodHRwczovL3Jwemd2am9ndGlrYS5ncmFuZG1vcmFsaXMuY29tOjIwNTMvc2VydmVyIjsKCiAgICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCJQYXJzZS9jVWNJUmVsaFRwY001dHZZQUhpRHVDRXVOSXBYZVJHQTU2SjRPZk5NL2N1cnJlbnRVc2VyIikpewogICAgICBNb3JhbGlzLmF1dGhlbnRpY2F0ZSgpLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICBjb25zb2xlLmxvZyh1c2VyLmdldCgiZXRoQWRkcmVzcyIpKTsKICAgICAgfSk7CiAgICB9CiAgICAvLyB0aGlzLmNhcmRzID0gY2FyZHMKICAgIC8vIHRoaXMuY2FyZHMgPSBjYXJkcy5zbGljZSgwLCA2KSwKICAgIC8vIGNvbnN0IGJhc2U2NFN0cmluZzIgPSBhd2FpdCBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUoLi4ubmV3IFVpbnQ4QXJyYXkoSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcmRhdGEnKSkudXNlci5jb3ZlckltYWdlLmRhdGEpKSk7CiAgICAvLyBjb25zdCBkZWNvZGVkU3RyaW5nMiA9IGF3YWl0IGF0b2IoYmFzZTY0U3RyaW5nMik7CiAgICAvLyBjb25zb2xlLmxvZyhKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyZGF0YScpKS51c2VyLmNvdmVySW1hZ2UuZGF0YSwgJ2NvdmVySW1hZ2UnLCBkZWNvZGVkU3RyaW5nMikKICAgIHRoaXMudXNlciA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJkYXRhIikpLnVzZXI7CiAgICBjb25zb2xlLmxvZyh0aGlzLnVzZXIsICJ1c2VyIGlzIGhlcmUiKTsKICAgIHRoaXMudXNlckNvdmVySW1nID0gSlNPTi5wYXJzZSgKICAgICAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJkYXRhIikKICAgICkudXNlci5jb3ZlckltYWdlOwogICAgY29uc29sZS5sb2codGhpcy51c2VyQ292ZXJJbWcsICJjb3ZlciBpbWFnZSBpcyBoZXJlIik7CiAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnVzZXJDb3ZlckltZywgIHRoaXMuY2FyZHMgLCAneW91dHViZScpCiAgICAvLyBjb25zdCBvcHRpb24gPSB7IGNoYWluOiAicmlua2VieSIsIGFkZHJlc3M6ICIweGFhNzM3ZGYyYjJjNDE3NTIwNWFmNDY0NGNiNGU0NGQ3YjljZWU1ZDQifTsKICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuaW0uYWNjb3VudCwgJ2FjY291bnQgbmZ0JykKICAgIGNvbnN0IG9wdGlvbnMgPSB7CiAgICAgIGNoYWluOiAicmlua2VieSIsCiAgICAgIGFkZHJlc3M6ICIweGY3YWViNzlkYzM4ZGZmZjQ5OTc4YzI4NDM3MTBlNmYxMDBiMDgyZDUiLAogICAgfTsKICAgIGNvbnNvbGUubG9nKCJtbW1tbW1tbW1tbW1vb29vb29vb3JyciIpOwogICAgY29uc3QgdHJhbnNmZXJzTkZUID0gYXdhaXQgTW9yYWxpcy5XZWIzQVBJLmFjY291bnQuZ2V0TkZUVHJhbnNmZXJzKG9wdGlvbnMpOwogICAgY29uc29sZS5sb2codHJhbnNmZXJzTkZULCAiIE5GVCB0cmFuc2ZlciIpOwogICAgY29uc3QgcG9seWdvbk5GVHMgPSBhd2FpdCBNb3JhbGlzLldlYjNBUEkuYWNjb3VudC5nZXRORlRzKG9wdGlvbnMpOwogICAgY29uc29sZS5sb2cocG9seWdvbk5GVHMsICJzZGZvc2FkZmlvc2lvZGYiKTsKICAgIC8vIGNvbnNvbGUubG9nKHRyYW5zZmVyc05GVCk7CiAgICBsZXQgY29udGVudCA9IFtdOwogICAgcG9seWdvbk5GVHMucmVzdWx0LmZvckVhY2goKGUpID0+IHsKICAgICAgbGV0IHVybCA9IGUudG9rZW5fdXJpOwogICAgICBhd2FpdCBmZXRjaCh1cmwpCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiByZXNwb25zZS5qc29uKCkpCiAgICAgICAgLnRoZW4oKGRhdGEpID0+IHsKICAgICAgICAgIC8vIGxldCBjdXJyZW50RGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNvbnRlbnQiKTsKICAgICAgICAgIGNvbnRlbnQucHVzaChkYXRhLmltYWdlKTsKICAgICAgICB9KTsKICAgIH0pOwogICAgdGhpcy5jYXJkcyA9IGNvbnRlbnQ7CiAgICBjb25zb2xlLmxvZyh0aGlzLmNhcmRzLCAiY2FyZHMiKTsKICB9LAogIGRhdGE6IHsKICAgIC8vIGFjdGl2ZTogZmFsc2UsCiAgICBpbWFnZTogbnVsbAogIH0sCgogIG1ldGhvZHM6IHsKICAgIHNob3dTdWNjc3MoKSB7CiAgICAgIGxldCB0aW1lckludGVydmFsOwogICAgICBTd2FsLmZpcmUoewogICAgICAgIHRpdGxlOiAiUHJvZmlsZSBVcGRhdGVkIFN1Y2Nlc3NmdWxseSIsCiAgICAgICAgaHRtbDogImNsb3NpbmcgaW4gPGI+PC9iPiBtaWxsaXNlY29uZHMuIiwKICAgICAgICB0aW1lcjogODAwLAogICAgICAgIHRpbWVyUHJvZ3Jlc3NCYXI6IHRydWUsCiAgICAgICAgZGlkT3BlbjogKCkgPT4gewogICAgICAgICAgU3dhbC5zaG93TG9hZGluZygpOwogICAgICAgICAgY29uc3QgYiA9IFN3YWwuZ2V0SHRtbENvbnRhaW5lcigpLnF1ZXJ5U2VsZWN0b3IoImIiKTsKICAgICAgICAgIHRpbWVySW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgIGIudGV4dENvbnRlbnQgPSBTd2FsLmdldFRpbWVyTGVmdCgpOwogICAgICAgICAgfSwgMTAwKTsKICAgICAgICB9LAogICAgICAgIHdpbGxDbG9zZTogKCkgPT4gewogICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lckludGVydmFsKTsKICAgICAgICB9LAogICAgICB9KS50aGVuKChyZXN1bHQpID0+IHsKICAgICAgICAvKiBSZWFkIG1vcmUgYWJvdXQgaGFuZGxpbmcgZGlzbWlzc2FscyBiZWxvdyAqLwogICAgICAgIGlmIChyZXN1bHQuZGlzbWlzcyA9PT0gU3dhbC5EaXNtaXNzUmVhc29uLnRpbWVyKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiSSB3YXMgY2xvc2VkIGJ5IHRoZSB0aW1lciIpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgb25GaWxlQ2hhbmdlKGUpewogICAgICB2YXIgZmlsZXMgPSBlLnRhcmdldC5maWxlcyB8fCBlLmRhdGFUcmFuc2Zlci5maWxlczsKICAgICAgY29uc29sZS5sb2coZmlsZXMsICJzYWhkZmhzYWhkZnNhZGYiKTsKICAgICAgaWYgKCFmaWxlcy5sZW5ndGgpIHJldHVybjsKICAgICAgdGhpcy5jcmVhdGVJbWFnZShmaWxlc1swXSkKICAgIH0sCiAgICBhc3luYyBjcmVhdGVJbWFnZShmaWxlKXsKICAgICAgdmFyIGltYWdlID0gYXdhaXQgbmV3IEltYWdlKCk7CiAgICAgIHZhciByZWFkZXIgPSBhd2FpdCBuZXcgRmlsZVJlYWRlcigpOwogICAgICBjb25zb2xlLmxvZyhmaWxlLCAiY2hlY2tpbmcgZm8gdGhlIGZpbGUiKTsKICAgICAgdmFyIHZtID0gdGhpczsKCiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHZtLmltYWdlID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgIHRoaXMudXNlckNvdmVySW1nID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgIHRoaXMudXBkYXRlQ292ZXJJbWcodGhpcy51c2VyQ292ZXJJbWcpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTsKICAgIH0sCiAgICBhc3luYyB1cGRhdGVDb3ZlckltZyhuZXdJbWFnZSkgewogICAgICAvLyBjb25zb2xlLmxvZyhuZXdJbWFnZSwgJ2dvdCB0aGUgaW1hZ2UgaW4gdGhlIHN0YXRlJyk7CiAgICAgIGxldCBwcm9maWxlX2RhdGEgPSB7CiAgICAgICAgc29jaWFsOiB7CiAgICAgICAgICB3ZWJzaXRlOiB0aGlzLnVzZXIuc29jaWFsLndlYnNpdGUsCiAgICAgICAgICBkaXNjb3JkOiB0aGlzLnVzZXIuc29jaWFsLmRpc2NvcmQsCiAgICAgICAgICB5b3V0dWJlOiB0aGlzLnVzZXIuc29jaWFsLnlvdXR1YmUsCiAgICAgICAgICBmYWNlYm9vazogdGhpcy51c2VyLnNvY2lhbC5mYWNlYm9vaywKICAgICAgICAgIHR3aXRjaDogdGhpcy51c2VyLnNvY2lhbC50d2l0Y2gsCiAgICAgICAgICB0aWt0b2s6IHRoaXMudXNlci5zb2NpYWwudGlrdG9rLAogICAgICAgICAgc25hcGNoYXQ6IHRoaXMudXNlci5zb2NpYWwuc25hcGNoYXQsCiAgICAgICAgfSwKICAgICAgICBpZDogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlcmRhdGEiKSkudXNlci5pZCwKICAgICAgICBuYW1lOiB0aGlzLnVzZXIubmFtZSwKICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyLnVzZXJuYW1lLAogICAgICAgIGVtYWlsOiB0aGlzLnVzZXIuZW1haWwsCiAgICAgICAgYmlvOiB0aGlzLnVzZXIuYmlvLAogICAgICAgIGxhbmc6IHRoaXMudXNlci5sYW5nLAogICAgICAgIHByb2ZpbGVJbWFnZTogdGhpcy51c2VyLnByb2ZpbGVJbWFnZSwKICAgICAgICBjb3ZlckltYWdlOiBuZXdJbWFnZSwKICAgICAgICBjcmVhdGVkQXQ6IHRoaXMudXNlci5jcmVhdGVkQXQsCiAgICAgIH07CiAgICAgIGxldCB1cGRhdGVkVXNlciA9IGF3YWl0IHRoaXMuYXhpb3MucG9zdCgKICAgICAgICBgJHtCQUNLRU5EX1VSTH0vdXNlci91cGRhdGVgLAogICAgICAgIHByb2ZpbGVfZGF0YSwKICAgICAgICB7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGAkewogICAgICAgICAgICAgIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJkYXRhIikpLnRva2VuCiAgICAgICAgICAgIH1gLAogICAgICAgICAgfSwKICAgICAgICB9CiAgICAgICk7CiAgICAgIGlmICh1cGRhdGVkVXNlci5zdGF0dXMgPT0gMjAwKSB7CiAgICAgICAgdGhpcy5zaG93U3VjY3NzKCk7CiAgICAgICAgbGV0IFNhdmVkdXNlciA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJkYXRhIikpOwogICAgICAgIFNhdmVkdXNlci51c2VyLm5hbWUgPSB0aGlzLnVzZXIubmFtZTsKICAgICAgICBTYXZlZHVzZXIudXNlci51c2VybmFtZSA9IHRoaXMudXNlci51c2VybmFtZTsKICAgICAgICBTYXZlZHVzZXIudXNlci5lbWFpbCA9IHRoaXMudXNlci5lbWFpbDsKICAgICAgICBTYXZlZHVzZXIudXNlci5iaW8gPSB0aGlzLnVzZXIuYmlvOwogICAgICAgIFNhdmVkdXNlci51c2VyLmxhbmcgPSB0aGlzLnVzZXIubGFuZzsKICAgICAgICBTYXZlZHVzZXIudXNlci5wcm9maWxlSW1hZ2UgPSB0aGlzLnVzZXIucHJvZmlsZUltYWdlOwogICAgICAgIFNhdmVkdXNlci51c2VyLmNvdmVySW1hZ2UgPSB0aGlzLmltYWdlOwogICAgICAgIFNhdmVkdXNlci51c2VyLmNyZWF0ZWRBdCA9IHRoaXMudXNlci5jcmVhdGVkQXQ7CiAgICAgICAgU2F2ZWR1c2VyLnVzZXIuc29jaWFsLndlYnNpdGUgPSB0aGlzLnVzZXIuc29jaWFsLndlYnNpdGU7CiAgICAgICAgU2F2ZWR1c2VyLnVzZXIuc29jaWFsLmRpc2NvcmQgPSB0aGlzLnVzZXIuc29jaWFsLmRpc2NvcmQ7CiAgICAgICAgU2F2ZWR1c2VyLnVzZXIuc29jaWFsLnlvdXR1YmUgPSB0aGlzLnVzZXIuc29jaWFsLnlvdXR1YmU7CiAgICAgICAgU2F2ZWR1c2VyLnVzZXIuc29jaWFsLmZhY2Vib29rID0gdGhpcy51c2VyLnNvY2lhbC5mYWNlYm9vazsKICAgICAgICBTYXZlZHVzZXIudXNlci5zb2NpYWwudHdpdGNoID0gdGhpcy51c2VyLnNvY2lhbC50d2l0Y2g7CiAgICAgICAgU2F2ZWR1c2VyLnVzZXIuc29jaWFsLnRpa3RvayA9IHRoaXMudXNlci5zb2NpYWwudGlrdG9rOwogICAgICAgIFNhdmVkdXNlci51c2VyLnNvY2lhbC5zbmFwY2hhdCA9IHRoaXMudXNlci5zb2NpYWwuc25hcGNoYXQ7CiAgICAgICAgU2F2ZWR1c2VyLnRva2VuID0gU2F2ZWR1c2VyLnRva2VuOwogICAgICAgIFNhdmVkdXNlci5tZXNzYWdlID0gYFRoZSB1c2VyIHdpdGggaWQ6ICR7U2F2ZWR1c2VyLnVzZXIuaWR9IHdhcyBmb3VuZC5gOwogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyZGF0YSIsIEpTT04uc3RyaW5naWZ5KFNhdmVkdXNlcikpOwogICAgICAgIHRoaXMudXNlckNvdmVySW1nID0gdGhpcy5pbWFnZTsKICAgICAgfQogICAgICBjb25zb2xlLmxvZyh0aGlzLnVzZXJDb3ZlckltZywgIm5ldyBjb3ZlciBpbWFnZSIpOwogICAgICBjb25zb2xlLmxvZygiU2F2aW5nIHByb2ZpbGUuLi4iLCB1cGRhdGVkVXNlcik7CiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <section class=\"cover_pfl\">\n      <div class=\"cover_bg_box\">\n        <img :src=\"userCoverImg\" class=\"cover_bg_img\" />\n      </div>\n      <!-- <img class=\"cover_bg_img\" :src=\"userCoverImg\" />\n       <img :src=\"image\" class=\"cover_bg_img\" /> -->\n      <div class=\"button-wrapper\">\n        <label class=\"custom-file-upload\">\n          <input type=\"file\" @change=\"onFileChange\" />\n          <b-icon\n            icon=\"upload\"\n            aria-hidden=\"true\"\n            class=\"upload_btn_icon\"\n          ></b-icon>\n        </label>\n      </div>\n    </section>\n    <div class=\"container\">\n      <profile-sidebar />\n      <div class=\"collection-container\">\n        <div class=\"collection-header\">\n          <span>On sale</span>\n          <span>Created</span>\n          <span>Activity</span>\n          <span>Owned</span>\n        </div>\n        <div class=\"collection-body\" v-if=\"cards\">\n          <item-card v-for=\"card in cards\" v-bind:key=\"card\" :card=\"card\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProfileSidebar from \"@/components/ProfileSidebar\";\nimport ItemCard from \"@/components/ItemCard\";\n// import cards from '@/cards.json'\nimport Swal from \"sweetalert2\";\n\nexport default {\n  components: { ProfileSidebar, ItemCard, Swal },\n  props: [\"cards\"],\n  data() {\n    return {\n      cards: null,\n      userCoverImg: null,\n      user: null,\n      // getFreeVideo : getFreeVideo()\n    };\n  },\n  async created(){\n    Moralis.initialize(\"cUcIRelhTpcM5tvYAHiDuCEuNIpXeRGA56J4OfNM\");\n\n    Moralis.serverURL = \"https://rpzgvjogtika.grandmoralis.com:2053/server\";\n\n    if (!localStorage.getItem(\"Parse/cUcIRelhTpcM5tvYAHiDuCEuNIpXeRGA56J4OfNM/currentUser\")){\n      Moralis.authenticate().then(function (user) {\n        console.log(user.get(\"ethAddress\"));\n      });\n    }\n    // this.cards = cards\n    // this.cards = cards.slice(0, 6),\n    // const base64String2 = await btoa(String.fromCharCode(...new Uint8Array(JSON.parse(localStorage.getItem('userdata')).user.coverImage.data)));\n    // const decodedString2 = await atob(base64String2);\n    // console.log(JSON.parse(localStorage.getItem('userdata')).user.coverImage.data, 'coverImage', decodedString2)\n    this.user = JSON.parse(localStorage.getItem(\"userdata\")).user;\n    console.log(this.user, \"user is here\");\n    this.userCoverImg = JSON.parse(\n      localStorage.getItem(\"userdata\")\n    ).user.coverImage;\n    console.log(this.userCoverImg, \"cover image is here\");\n    // console.log(this.userCoverImg,  this.cards , 'youtube')\n    // const option = { chain: \"rinkeby\", address: \"0xaa737df2b2c4175205af4644cb4e44d7b9cee5d4\"};\n    // console.log(this.im.account, 'account nft')\n    const options = {\n      chain: \"rinkeby\",\n      address: \"0xf7aeb79dc38dfff49978c2843710e6f100b082d5\",\n    };\n    console.log(\"mmmmmmmmmmmmoooooooorrr\");\n    const transfersNFT = await Moralis.Web3API.account.getNFTTransfers(options);\n    console.log(transfersNFT, \" NFT transfer\");\n    const polygonNFTs = await Moralis.Web3API.account.getNFTs(options);\n    console.log(polygonNFTs, \"sdfosadfiosiodf\");\n    // console.log(transfersNFT);\n    let content = [];\n    polygonNFTs.result.forEach((e) => {\n      let url = e.token_uri;\n      await fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          // let currentDiv = document.getElementById(\"content\");\n          content.push(data.image);\n        });\n    });\n    this.cards = content;\n    console.log(this.cards, \"cards\");\n  },\n  data: {\n    // active: false,\n    image: null\n  },\n\n  methods: {\n    showSuccss() {\n      let timerInterval;\n      Swal.fire({\n        title: \"Profile Updated Successfully\",\n        html: \"closing in <b></b> milliseconds.\",\n        timer: 800,\n        timerProgressBar: true,\n        didOpen: () => {\n          Swal.showLoading();\n          const b = Swal.getHtmlContainer().querySelector(\"b\");\n          timerInterval = setInterval(() => {\n            b.textContent = Swal.getTimerLeft();\n          }, 100);\n        },\n        willClose: () => {\n          clearInterval(timerInterval);\n        },\n      }).then((result) => {\n        /* Read more about handling dismissals below */\n        if (result.dismiss === Swal.DismissReason.timer) {\n          console.log(\"I was closed by the timer\");\n        }\n      });\n    },\n    onFileChange(e){\n      var files = e.target.files || e.dataTransfer.files;\n      console.log(files, \"sahdfhsahdfsadf\");\n      if (!files.length) return;\n      this.createImage(files[0])\n    },\n    async createImage(file){\n      var image = await new Image();\n      var reader = await new FileReader();\n      console.log(file, \"checking fo the file\");\n      var vm = this;\n\n      reader.onload = (e) => {\n        vm.image = e.target.result;\n        this.userCoverImg = e.target.result;\n        this.updateCoverImg(this.userCoverImg);\n      };\n      reader.readAsDataURL(file);\n    },\n    async updateCoverImg(newImage) {\n      // console.log(newImage, 'got the image in the state');\n      let profile_data = {\n        social: {\n          website: this.user.social.website,\n          discord: this.user.social.discord,\n          youtube: this.user.social.youtube,\n          facebook: this.user.social.facebook,\n          twitch: this.user.social.twitch,\n          tiktok: this.user.social.tiktok,\n          snapchat: this.user.social.snapchat,\n        },\n        id: JSON.parse(localStorage.getItem(\"userdata\")).user.id,\n        name: this.user.name,\n        username: this.user.username,\n        email: this.user.email,\n        bio: this.user.bio,\n        lang: this.user.lang,\n        profileImage: this.user.profileImage,\n        coverImage: newImage,\n        createdAt: this.user.createdAt,\n      };\n      let updatedUser = await this.axios.post(\n        `${BACKEND_URL}/user/update`,\n        profile_data,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `${\n              JSON.parse(localStorage.getItem(\"userdata\")).token\n            }`,\n          },\n        }\n      );\n      if (updatedUser.status == 200) {\n        this.showSuccss();\n        let Saveduser = JSON.parse(localStorage.getItem(\"userdata\"));\n        Saveduser.user.name = this.user.name;\n        Saveduser.user.username = this.user.username;\n        Saveduser.user.email = this.user.email;\n        Saveduser.user.bio = this.user.bio;\n        Saveduser.user.lang = this.user.lang;\n        Saveduser.user.profileImage = this.user.profileImage;\n        Saveduser.user.coverImage = this.image;\n        Saveduser.user.createdAt = this.user.createdAt;\n        Saveduser.user.social.website = this.user.social.website;\n        Saveduser.user.social.discord = this.user.social.discord;\n        Saveduser.user.social.youtube = this.user.social.youtube;\n        Saveduser.user.social.facebook = this.user.social.facebook;\n        Saveduser.user.social.twitch = this.user.social.twitch;\n        Saveduser.user.social.tiktok = this.user.social.tiktok;\n        Saveduser.user.social.snapchat = this.user.social.snapchat;\n        Saveduser.token = Saveduser.token;\n        Saveduser.message = `The user with id: ${Saveduser.user.id} was found.`;\n        localStorage.setItem(\"userdata\", JSON.stringify(Saveduser));\n        this.userCoverImg = this.image;\n      }\n      console.log(this.userCoverImg, \"new cover image\");\n      console.log(\"Saving profile...\", updatedUser);\n      this.$forceUpdate();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  width: 95%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.collection-container {\n  width: 100%;\n  padding: 2rem 0;\n  z-index: 999;\n}\n\n.collection-header {\n  color: #44484b;\n  font-weight: bold;\n  font-size: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  border-bottom: 1px solid #d8d8d8;\n  padding-bottom: 1rem;\n}\n\n.collection-body {\n  margin-top: 1.5rem;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));\n  grid-gap: 0.5rem;\n  align-items: center;\n}\n\n.card {\n  margin: auto;\n}\n\n.cover_bg_box {\n  height: 263px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n@media screen and (min-width: 992px) {\n  .container {\n    max-width: 1300px;\n    flex-direction: row;\n  }\n\n  .collection-container {\n    margin-left: 3rem;\n    width: 70%;\n  }\n\n  .collection-header {\n    max-width: 860px;\n    margin: 0 auto;\n  }\n\n  .collection-body {\n    max-width: 870px;\n    margin: 1.5rem auto 0;\n  }\n}\n.cover_pfl {\n  height: 250px;\n  position: relative;\n  /* overflow: hidden; */\n}\n\n/* ************* */\n\ninput[type=\"file\"] {\n  display: none;\n}\n\n.custom-file-upload {\n  cursor: pointer;\n  text-decoration: none;\n  position: absolute;\n  right: 25px;\n  bottom: 7px;\n}\n\n.upload_btn_icon {\n  background: -webkit-linear-gradient(to right, #e2c4b5, #988bc2) !important;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: 25px;\n}\n\n@media screen and (max-width: 425px) {\n  .cover_bg_box {\n    height: 225px;\n  }\n}\n</style>\n"]}]}