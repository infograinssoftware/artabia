{"remainingRequest":"/home/and-01/Desktop/Artabiaf/node_modules/babel-loader/lib/index.js!/home/and-01/Desktop/Artabiaf/src/mixin/mixin.js","dependencies":[{"path":"/home/and-01/Desktop/Artabiaf/src/mixin/mixin.js","mtime":1639819506622},{"path":"/home/and-01/Desktop/Artabiaf/node_modules/cache-loader/dist/cjs.js","mtime":1639812331769},{"path":"/home/and-01/Desktop/Artabiaf/node_modules/babel-loader/lib/index.js","mtime":1639812331565}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/and-01/Desktop/Artabiaf/src/mixin/mixin.js"],"names":["ArtabiaERC1155","ArtabiaERC721","ERC1155AuctionMarketplace","ERC1155ListingMarketplace","ERC1155OrderMarketplace","ERC721AuctionMarketplace","ERC721ListingMarketplace","ERC721OrderMarketplace","IntegrationManager","Vue","Web3","require","Moralis","data","cms","featured","created","window","im","binanceNode","ethereumNode","BACKEND_URL","ETHERSCAN_KEY","getEthPrice","fetch","then","res","json","result","ethusd","split","prototype","$cms","axios","get","console","log","mounted","document","querySelector","classList","add"],"mappings":"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","sourcesContent":["import {\n  ArtabiaERC1155,\n  ArtabiaERC721,\n  ERC1155AuctionMarketplace,\n  ERC1155ListingMarketplace,\n  ERC1155OrderMarketplace,\n  ERC721AuctionMarketplace,\n  ERC721ListingMarketplace,\n  ERC721OrderMarketplace,\n  IntegrationManager\n} from \"integration\";\nimport Vue from \"vue\";\n\nconst Web3 = require('web3')\n\nconst Moralis = require('moralis')\n\n\n\nexport default {\n\n  data() {\n    return {\n      cms: \"http://localhost:1337\",\n      featured: {},\n    }\n  },\n\n  async created() {\n\n    window.im = new IntegrationManager([\n      [ ERC721OrderMarketplace, '0xf7aeb79dc38dfff49978c2843710e6f100b082d5', 'erc721OrderMarketplace' ],\n      [ ERC721ListingMarketplace, '0x0753328af3a3e963eefc0dd9977f9777abf8b8f0', 'erc721ListingMarketplace' ],\n      [ ERC721AuctionMarketplace, '0xc14f305b87e446f1b4ce70000619c2408b572ffa', 'erc721AuctionMarketplace' ],\n      [ ERC1155OrderMarketplace, '0xa68828a30ff846f420318a15c990f687e0ce6f9c', 'erc1155OrderMarketplace' ],\n      [ ERC1155ListingMarketplace, '0x41b3e8752cd4e5073127125882b754a9fc2c28af', 'erc1155ListingMarketplace' ],\n      [ ERC1155AuctionMarketplace, '0x14edd9f2d67e50bc6615e573ae55f4f2a7c6743c', 'erc1155AuctionMarketplace' ],\n      [ ArtabiaERC721, '0x81a5c730043fe2dd4d885407e52d1cd33b7a66f3', 'artabiaErc721' ],\n      [ ArtabiaERC1155, '0xaed1654fe63fcec92b83faf7a0b9ac1805536c25', 'artabiaErc1155' ]\n    ]);\n  \n\n\n    window.binanceNode = new Web3('https://bsc-dataseed.binance.org')\n    window.ethereumNode = new Web3('https://rinkeby.infura.io/v3/f6e6e48ae12549f9915623dbca2b7bdd')\n\n    window.BACKEND_URL='https://artabia.com:3001'\n\n    // window.ETHERSCAN_KEY='R9ECHH6U5WVVPQJ683W7K96M9MU2Q2VQDC'\n    window.ETHERSCAN_KEY = 'XVMNZKGP7PKW3R7918EMWDDTXXYHA9E75X'\n    // headers = {\n    //   'User-Agent': \"PostmanRuntime/7.17.1\",\n    //   'Accept': \"/\",\n    //   ‘Cache-Control’: “no-cache”,\n    //   ‘Postman-Token’: “267dd7be-7f3f-4d67-a51c-05152aa8e8fc,8f8b84b0-3df1-4656-9480-c31e99d270d2”,\n    //   ‘Host’: “ropsten.etherscan.io 10”,\n    //   ‘Accept-Encoding’: “gzip, deflate”,\n    //   ‘Cookie’: “__cfduid=d33064099a72a08ae6f9197c790da62d21569724532”,\n    //   ‘Connection’: “keep-alive”,\n    //   ‘cache-control’: “no-cache”\n    //   }\n\n    // for signing using metamask\n    // im.web3.eth.sign(im.web3.utils.utf8ToHex(\"Hello world\"), \"0xaa737df2b2c4175205af4644cb4e44d7b9cee5d4\")\n\n    window.getEthPrice = () => fetch('https://api.etherscan.io/api?module=stats&action=ethprice&apikey=' + ETHERSCAN_KEY).then(res => res.json()).then(res => res.result.ethusd.split('.')[0])\n\n    // window.getNftMetadata = (id) => fetch(`${BACKEND_URL}/metadata/${id}.json`).then(response => response.json())\n\n    //Login the user afte home page loading\n\n    // window.login = async ({ web3, account = '0x000000000000000000000000000000000000'}) => {\n    //   let message = \"Welcome to Artabia!\\n\\nPlease sign this message to log in\"\n    //   let hash = im.web3.utils.sha3(message)\n    //   try{\n\n    //     let signature = await im.web3.eth.personal.sign(hash, account)\n    //     console.log(signature, 'signature is here')\n    //     let user_data = await this.axios.post(`${BACKEND_URL}/user/connect`,{\"id\" : account, \"signature\" : signature}).then((res) => res.data);\n    //     return user_data\n    //   }\n    //   catch(e){\n    //     console.log(e);\n    //     return e;\n    //   }\n    // }\n\n    \n    // async function getMoraliNFT(){\n\n    //   const options = { chain: 'rinkeby', address: '0xf7aeb79dc38dfff49978c2843710e6f100b082d5' };\n    //   const polygonNFTs = await Moralis.Web3API.account.getNFTs(options);\n    //   console.log(polygonNFTs, ' MORALIS NFTs are here');\n    //   window.moralisnft = polygonNFTs\n    // }\n    // getMoraliNFT()\n\n    window.Moralis = Moralis\n\n    Vue.prototype.$cms = this.cms\n\n    try {\n      const {data} = await this.axios.get(`${this.$cms}/global`);\n\n      window.featured = data;\n\n    } catch (e) {\n      console.log(e)\n    }\n\n  },\n  async mounted() {\n    document.querySelector(\".loading-spinner\").classList.add(\"hidden\");\n  }\n}\n\n"]}]}